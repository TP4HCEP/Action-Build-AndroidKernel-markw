name: Action_Build-LinuxKernel-4.9

on:
  workflow_dispatch:

jobs:
  build:
    if: github.event.repository.owner.id == github.event.sender.id
    runs-on: ubuntu-18.04
    
    steps:
      - name: Get the source code of this repositorie...
        uses: actions/checkout@main

      - name: Get variable configuration...
        run: |
          echo "BUILD_TIME=$(date +%s | md5sum | awk '{print substr($1,1,10)}')" >> $GITHUB_ENV

      - name: Configuration Environment
        run: |
          sudo apt update && sudo apt -y dist-upgrade
          sudo apt install -y gcc g++ python make texinfo texlive bc bison build-essential ccache curl flex g++-multilib gcc-multilib git gnupg gperf imagemagick lib32ncurses5-dev lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-dev libxml2 libxml2-utils lzop pngcrush rsync schedtool squashfs-tools xsltproc zip zlib1g-dev unzip language-pack-zh-hans
          git config --global user.name "Mochen"
          git config --global user.email "mochen20070702@gmail.com"

      - name: Clone markw kernel tree(By SonicBSV)
        run: |
          cd $GITHUB_WORKSPACE
          git clone --depth=1 https://github.com/SonicBSV/android_kernel_xiaomi_markw_new.git -b LA.UM.9.6.2.r1-04600-89xx.0

      - name: Download gcc-clang
        run: |
          cd $GITHUB_WORKSPACE/android_kernel_xiaomi_markw_new
          aria2c "https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-a/10.3-2021.07/binrel/gcc-arm-10.3-2021.07-x86_64-arm-none-linux-gnueabihf.tar.xz"
          aria2c "https://armkeil.blob.core.windows.net/developer/Files/downloads/gnu-a/10.3-2021.07/binrel/gcc-arm-10.3-2021.07-x86_64-aarch64-none-linux-gnu.tar.xz"
          aria2c "https://github.com/llvm/llvm-project/releases/download/llvmorg-13.0.0/clang+llvm-13.0.0-aarch64-linux-gnu.tar.xz"
          xz -d gcc-arm-10.3-2021.07-x86_64-arm-none-linux-gnueabihf.tar.xz
          xz -d gcc-arm-10.3-2021.07-x86_64-aarch64-none-linux-gnu.tar.xz
          xz -d clang+llvm-13.0.0-aarch64-linux-gnu.tar.xz
          tar xf gcc-arm-10.3-2021.07-x86_64-arm-none-linux-gnueabihf.tar
          tar xf gcc-arm-10.3-2021.07-x86_64-aarch64-none-linux-gnu.tar
          tar xf clang+llvm-13.0.0-aarch64-linux-gnu.tar
          rm *.tar

      - name: Start Build Kernel
        run: |
          cd $GITHUB_WORKSPACE/android_kernel_xiaomi_markw_new
          BuildTime=$(date +%Y_%m_%d)
          export ARCH=arm64
          export SUBARCH=arm64
          export CC=${PWD}/clang+llvm-13.0.0-aarch64-linux-gnu/bin/clang
          export CLANG_TRIPLE=aarch64-none-linux-gnu-
          export CROSS_COMPILE=${PWD}/gcc-arm-10.3-2021.07-x86_64-aarch64-none-linux-gnu/bin/aarch64-none-linux-gnu-
          export CROSS_COMPILE_ARM32=${PWD}/gcc-arm-10.3-2021.07-x86_64-arm-none-linux-gnueabihf/bin/arm-none-linux-gnueabihf-
          make clean
          make mrproper
          make O=out markw_defconfig
          make -j$(nproc) O=out 2>&1 | tee BuildKernel-$BuildTime.log

      - name: Upload to Release...
        run: |
          cd $GITHUB_WORKSPACE/android_kernel_xiaomi_markw_new
          mkdir Upload
          sudo chmod -R 777 ./*
          mv ./*.log ./Upload
          mv ./out/arch/arm64/boot/Image.gz-dtb ./Upload
          cd Upload
          md5sum ./* > md5.sum
          curl -sL https://git.io/cowtransfer | sh
          ls -ln
          ./cowtransfer-uploader -s -p 8 ./*
